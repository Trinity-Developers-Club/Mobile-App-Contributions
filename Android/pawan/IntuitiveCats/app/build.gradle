plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.intuitivecats"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.example.intuitivecats.TestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding {
        enabled = true
    }

    testOptions {
        unitTests {
            all {
                useJUnitPlatform()
                testLogging {
                    events = ["passed", "skipped", "failed"]
                    showExceptions = true
                    showCauses = true
                    showStackTraces = true
                    afterSuite { descriptor, result ->
                        if (!descriptor.parent) { // will match the outermost suite
                            println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                        }
                    }
                }
            }
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    implementation project(path: ':pagerv')

    def lifecycle_version = "2.5.1"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    //dagger
    implementation 'com.google.dagger:hilt-android:2.44'
    kapt 'com.google.dagger:hilt-compiler:2.44'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //ktx
    implementation 'androidx.activity:activity-ktx:1.3.1'

    //ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    //LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation 'androidx.navigation:navigation-compose:2.5.0'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    kapt 'com.github.bumptech.glide:compiler:4.14.2'

    //okhttplogger
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'

    //paging
    implementation 'androidx.paging:paging-common-ktx:3.1.1'
    implementation 'androidx.paging:paging-runtime-ktx:3.1.1'

    //navigation
    def nav_version = "2.5.3"
    def junit5Version = "5.9.1"

    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    /*Unit testing Dependencies*/
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junit5Version}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junit5Version}"
    testImplementation "org.junit.jupiter:junit-jupiter-migrationsupport:${junit5Version}"

    testImplementation "org.mockito:mockito-core:3.0.0"
    testImplementation "io.mockk:mockk:1.10.5"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.9.0"
    testImplementation 'org.robolectric:robolectric:4.5.1'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.test:runner:1.4.0'
    testImplementation "androidx.test:core-ktx:1.4.0"
    testImplementation 'org.robolectric:robolectric:4.5.1'

    testImplementation "org.assertj:assertj-core:3.18.0"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit5Version}"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${junit5Version}"

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    def hiltVersion = "2.36"

    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:2.3.5"
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.2'

    implementation 'androidx.fragment:fragment:1.5.4'
    debugImplementation 'androidx.fragment:fragment-testing:1.5.4'

}

kapt {
    arguments {
        arg("dagger.hilt.shareTestComponents", "true")
    }
    correctErrorTypes true
}